----------Условие----------
Символ        Значение
я 1
В 5
Х 10
л 50
С 100
Д 500
М 1000
Например,  2пишется как II римскими цифрами, просто две сложенные вместе. 12пишется как  XII, что просто X + II. Число 27записывается как XXVII, то есть XX + V + II.

Римские цифры обычно пишутся слева направо от большего к меньшему. Однако цифра «четыре» — не IIII. Вместо этого цифра четыре записывается как IV. Так как единица предшествует пятерке, мы вычитаем ее и получаем четыре. Тот же принцип применим к числу девять, которое записывается как IX. Есть шесть случаев, когда используется вычитание:

Iможно поставить перед V(5) и X(10), чтобы получилось 4 и 9. 
Xможно поставить перед L(50) и C(100), чтобы получилось 40 и 90. 
Cможно поставить перед D(500) и M(1000), чтобы получить 400 и 900.
Дана римская цифра, преобразовать ее в целое число.

 

Пример 1:

Ввод: s = "III"
 Вывод: 3
 Объяснение: III = 3.
Пример 2:

Вход: s = "LVIII"
 Выход: 58
 Объяснение: L = 50, V = 5, III = 3.
Пример 3:

Ввод: s = "MCMXCIV"
 Вывод: 1994
 Объяснение: M = 1000, CM = 900, XC = 90 и IV = 4.

----------Решение----------
func romanToInt(s string) int {
    romanValues := map[byte]int{'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
    sum := 0
    for i := 0; i < len(s); i++ {
        if i < len(s)-1 && romanValues[s[i]] < romanValues[s[i+1]] {
            sum -= romanValues[s[i]]
        } else {
            sum += romanValues[s[i]]
        }
    }
    return sum
}


Здесь мы создали map romanValues, который хранит соответствие римских цифр и их численных значений.
Затем мы идем по строке s и для каждой римской цифры добавляем ее численное значение к сумме sum.
Если текущая римская цифра меньше следующей, мы вычитаем ее значение из суммы (учитывая правило вычитания).
В конце функция возвращает полученную сумму.




